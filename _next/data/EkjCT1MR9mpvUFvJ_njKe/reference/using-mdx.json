{"pageProps":{"source":{"compiledSource":"var l=Object.defineProperty,d=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var p=(e,o,t)=>o in e?l(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,a=(e,o)=>{for(var t in o||(o={}))i.call(o,t)&&p(e,t,o[t]);if(r)for(var t of r(o))s.call(o,t)&&p(e,t,o[t]);return e},c=(e,o)=>d(e,u(o));var m=(e,o)=>{var t={};for(var n in e)i.call(e,n)&&o.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&r)for(var n of r(e))o.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},t))},Counter=makeShortcode(\"Counter\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,o=m(n,[\"components\"]);return mdx(MDXLayout,c(a(a({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"h2\",a({},{id:\"what-is-mdx\"}),\"What Is MDX?\"),mdx(\"p\",null,\"MDX to markdown is the same as JSX to JS. To quote the \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://mdxjs.com/\",target:\"_blank\",rel:\"nofollow noopener noreferrer\"}),\"original site\"),\",\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"MDX is an authorable format that lets you seamlessly write JSX in your Markdown documents. You can import components, such as interactive charts or alerts, and embed them within your content. This makes writing long-form content with components a blast \\u{1F680}.\")),mdx(\"p\",null,\"... and this one:\"),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"Writing is fun again when you combine components, that can even be dynamic or load data, with the simplicity of Markdown for long-form content.\")),mdx(\"p\",null,\"Basically, renaming your \",mdx(\"inlineCode\",{parentName:\"p\"},\".md\"),\" file to \",mdx(\"inlineCode\",{parentName:\"p\"},\".mdx\"),\" gives you ability to import and use React components as if it was a normal React or Next.js app.\"),mdx(\"p\",null,\"Here is a small demo video for curious:\"),mdx(\"iframe\",{width:\"100%\",height:\"400\",src:\"https://www.youtube-nocookie.com/embed/d2sQiI5NFAM\",frameBorder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:!0}),mdx(\"h2\",a({},{id:\"using-custom-components\"}),\"Using Custom Components\"),mdx(\"p\",null,\"Say we have a basic React counter component like this:\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\",metastring:\"title=components/example-counter.jsx\",title:\"components/example-counter.jsx\"}),`import React, { useState } from 'react'\nexport default function Counter() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <div className='border border-gray-500 p-2 m-10 rounded-md bg-gray-700 text-gray-100'>\n      <p>You clicked {count} times!</p>\n      <button\n        onClick={() => setCount(count + 1)}\n        className='rounded border border-gray-500 bg-gray-900 p-1 mt-2'\n      >\n        Click me\n      </button>\n    </div>\n  )\n}\n`)),mdx(\"p\",null,\"If you need to use components in your markdown content files, use \",mdx(\"inlineCode\",{parentName:\"p\"},\".mdx\"),\" extension, and provide any custom components through the \",mdx(\"inlineCode\",{parentName:\"p\"},\"components/component-mapper.jsx\"),\" file. Then include it in your \",mdx(\"inlineCode\",{parentName:\"p\"},\".mdx\"),\" file and display it just like in React application:\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-markdown\"}),`### Example Counter Component\n<Counter />\n`)),mdx(\"p\",null,\"becomes:\"),mdx(\"h3\",a({},{id:\"example-counter-component\"}),\"Example Counter Component\"),mdx(Counter,{mdxType:\"Counter\"}),mdx(\"p\",null,\"Voila! This way you can create dynamic components for your documentation like never before. Live code editors, quizes, exams, cheatsheets, comments, you name it. Possibilities are endless. Notice that you can use tailwindcss classnames in components for styling.\"),mdx(\"h2\",a({},{id:\"more-mdx-wizardry\"}),\"More MDX Wizardry\"),mdx(\"p\",null,\"For more information what can be achieved with MDX, see the \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://mdxjs.com/\",target:\"_blank\",rel:\"nofollow noopener noreferrer\"}),\"official site\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{"part":"Documentation","title":"Using MDX","tocRaw":[{"content":"What Is MDX?","slug":"what-is-mdx","lvl":2,"i":0,"seen":0},{"content":"Using Custom Components","slug":"using-custom-components","lvl":2,"i":1,"seen":0},{"content":"Example Counter Component","slug":"example-counter-component","lvl":3,"i":2,"seen":0},{"content":"More MDX Wizardry","slug":"more-mdx-wizardry","lvl":2,"i":3,"seen":0}]}},"frontMatter":{"part":"Documentation","title":"Using MDX","tocRaw":[{"content":"What Is MDX?","slug":"what-is-mdx","lvl":2,"i":0,"seen":0},{"content":"Using Custom Components","slug":"using-custom-components","lvl":2,"i":1,"seen":0},{"content":"Example Counter Component","slug":"example-counter-component","lvl":3,"i":2,"seen":0},{"content":"More MDX Wizardry","slug":"more-mdx-wizardry","lvl":2,"i":3,"seen":0}]}},"__N_SSG":true}